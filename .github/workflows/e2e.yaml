name: E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DATABASE }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '22'
      #     cache: 'npm'

      # - name: Install dependencies
      #   run: npm install

      - name: Setup Pagila Database
        run: |
          cd pagila
          psql -h localhost -U ${{ secrets.PG_USER }} -d ${{ secrets.PG_DATABASE }} -f pagila-schema.sql
          psql -h localhost -U ${{ secrets.PG_USER }} -d ${{ secrets.PG_DATABASE }} -f pagila-data.sql
        env:
          PGPASSWORD: ${{ secrets.PG_PASSWORD }}

      - name: create env file
        run: |
          touch .env
          echo PG_USER=${{ secrets.PG_USER }} >> .env
          echo PG_HOST=${{ secrets.PG_HOST }} >> .env
          echo PG_DATABASE=${{ secrets.PG_DATABASE }} >> .env
          echo PG_PASSWORD=${{ secrets.PG_PASSWORD }} >> .env
          echo PG_PORT=${{ secrets.PG_PORT }} >> .env

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npm test
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            cypress/screenshots
            cypress/videos

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            cypress/screenshots
            cypress/videos

      - name: Report status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ All tests passed successfully!"
          else
            echo "❌ Tests failed. Check artifacts for details."
            exit 1
          fi