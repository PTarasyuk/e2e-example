name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DATABASE }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Setup Pagila Database
        run: |
          cd pagila
          psql -h postgres -U ${{ secrets.PG_USER }} -d ${{ secrets.PG_DATABASE }} -f ./pagila/pagila-schema.sql
          psql -h postgres -U ${{ secrets.PG_USER }} -d ${{ secrets.PG_DATABASE }} -f ./pagila/pagila-data.sql
        env:
          PGPASSWORD: ${{ secrets.PG_PASSWORD }}

      - name: Run tests
        run: npm test
        env:
          PG_USER: ${{ secrets.PG_USER }}
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
          PG_HOST: ${{ secrets.PG_HOST }}
          PG_DATABASE: ${{ secrets.PG_DATABASE }}
          PG_PORT: ${{ secrets.PG_PORT }}
      
      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-artifacts
          path: |
            cypress/screenshots
            cypress/videos

      - name: Report status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ All tests passed successfully!"
          else
            echo "❌ Tests failed. Check artifacts for details."
            exit 1
          fi